{"version":3,"file":"static/webpack/static/development/pages/index.js.d44313cce83f6ffbbf67.hot-update.js","sources":["webpack:///./components/slot-machine.tsx"],"sourcesContent":["// import Reel from 'react-reel'\nimport React from 'react'\n//  @ts-ignore\nimport theme from './theme.css';\nimport { Grid, Paper } from '@material-ui/core';\n//@ts-ignore\nimport Slot from 'react-slot-machine'\n\ninterface prop {\n  text: string; turning: boolean\n}\n\nconst SlotBox = ({ target, turning }: {\n  turning: boolean;\n  target: string\n}) => {\n  const value = parseInt(target)\n  return (\n    <Slot /* props */ className='slot-box'\n      target={value}\n      times={5}\n      duration={5000}\n      turning={turning}>\n      {\n        list.map(value =>\n          <div className='reel'>\n            {value}\n          </div>\n        )\n        // Children of `Slot` be sure to be `width` and `height` are 100%.\n      }\n    </Slot>\n  )\n}\nconst list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\nconst SlotMachine = ({ text, turning }: prop) => {\n  console.log(text)\n  return (<div>\n    <Grid container spacing={3}>\n      <Grid item xs>\n        <Paper >\n          <SlotBox target={text.substring(0, 1)} turning={turning}></SlotBox>\n        </Paper>\n      </Grid>\n      <Grid item xs>\n        <Paper >\n          <SlotBox target={text.substring(1, 2)} turning={turning}></SlotBox>\n        </Paper>\n      </Grid>\n      <Grid item xs>\n        <Paper >\n          <SlotBox target={text.substring(2, 3)} turning={turning}></SlotBox>\n        </Paper>\n      </Grid>\n      <Grid item xs>\n        <Paper >\n          <SlotBox target={text.substring(3, 4)} turning={turning}></SlotBox>\n        </Paper>\n      </Grid>\n    </Grid>\n  </div >)\n}\nexport default SlotMachine"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AAesourceRoot":""}